{"version":3,"sources":["Todo.js","TodoList.js","App.js","index.js"],"names":["Todo","todo","toggleTodo","type","checked","complete","onChange","id","name","TodoList","todos","map","key","LOCAL_STORAGE_KEY","App","useState","setTodos","todoNameRef","useRef","useEffect","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","Card","className","ImgOverlay","Title","Text","Img","src","alt","CardGroup","variant","Body","Footer","newTodos","find","ref","onClick","e","current","value","console","log","prevTodos","uuidv4","filter","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8c67f159.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Todo({ todo, toggleTodo }) {\r\n    function handleTodoClick(){\r\n        toggleTodo(todo.id)\r\n    }\r\n    return (\r\n        <div>\r\n            <label>\r\n                <input type=\"checkbox\" checked={todo.complete} onChange={handleTodoClick}/>\r\n                {todo.name}\r\n            </label>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Todo from './Todo'\r\n/*\r\n    API call:\r\n    http://api.openweathermap.org/data/2.5/forecast?id=524901&APPID={APIKEY}\r\n    Parameters:\r\n    APPID {APIKEY} is your unique API key\r\n    Example of API call with the API key given to me for registering on https://home.openweathermap.org/:\r\n    api.openweathermap.org/data/2.5/forecast?id=524901&APPID=a0c07608da28e327c40deb6d013f0600\r\n*/\r\nexport default function TodoList({ todos, toggleTodo }) {\r\n    return (\r\n        todos.map(todo => {\r\n            return <Todo key={todo.id} toggleTodo={toggleTodo} todo={todo} />\r\n        })\r\n    )\r\n}\r\n","import React, { useState, useRef, useEffect } from 'react';\r\n\r\nimport uuidv4 from 'uuid/v4';\r\nimport TodoList from './TodoList';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport Card from 'react-bootstrap/Card';\r\nimport CardGroup from 'react-bootstrap/CardGroup';\r\n\r\nconst Api_Key = \"8d2de98e089f1c28e1a22fc19a24ef04\";\r\n//to create a react application, type 'npx create-react-app my-appname'\r\n//use npm start to run the application on the local server\r\n\r\n//you can use 'className=\"mt-auto\"' on CARD.title to put text on bottom of Jumbotron/Card\r\n\r\nconst LOCAL_STORAGE_KEY = 'todoApp.todos'\r\nfunction App(){\r\n    const [todos, setTodos] = useState([])\r\n    const todoNameRef = useRef()\r\n    \r\n    useEffect(() => {\r\n        const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\r\n        if(storedTodos) setTodos(storedTodos)\r\n    }, [])\r\n    useEffect(() => {\r\n        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos))\r\n    }, [todos])\r\n    function toggleTodo(id) {\r\n        const newTodos = [...todos]\r\n        const todo = newTodos.find(todo => todo.id === id)\r\n        todo.complete = !todo.complete\r\n        setTodos(newTodos)\r\n    }\r\n    function handleAddTodo(e) {\r\n        const name = todoNameRef.current.value\r\n        if (name === '') return\r\n        console.log(name)\r\n        setTodos(prevTodos => {\r\n            return [...prevTodos, { id: uuidv4(), name: name, complete: false}]\r\n        })\r\n        todoNameRef.current.value = null\r\n    }\r\n\r\n    function handleClearTodos(){\r\n        const newTodos = todos.filter(todo => !todo.complete)\r\n        setTodos(newTodos)\r\n    }\r\n    return (\r\n        <>\r\n            <Card className=\"bg-dark text-white\">\r\n                    \r\n                <Card.ImgOverlay className=\"d-flex flex-column\">\r\n                    <Card.Title ><h1>Mr. MowBellevue</h1></Card.Title>\r\n                    <Card.Text>\r\n                        Let Me Get That For You!!\r\n                    </Card.Text>\r\n                    <Card.Text className=\"mt-auto\">Thanks For Visiting</Card.Text>\r\n                </Card.ImgOverlay>\r\n                <Card.Img src=\"mower3d_snippit3.PNG\" alt=\"Logo of Mower in action\" />\r\n            </Card>\r\n            <script src=\"holder.js\"></script>\r\n            \r\n            <CardGroup>\r\n                <Card>\r\n                    <Card.Img variant=\"top\" src=\"mower3d_snippit_mowing.PNG\" />\r\n                    <Card.Body>\r\n                    <Card.Title>Card title</Card.Title>\r\n                    <Card.Text>\r\n                        This is a wider card with supporting text below as a natural lead-in to\r\n                        additional content. This content is a little bit longer.\r\n                    </Card.Text>\r\n                    </Card.Body>\r\n                    <Card.Footer>\r\n                    <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n                    </Card.Footer>\r\n                </Card>\r\n                <Card>\r\n                    <Card.Img variant=\"top\" src=\"mower3d_snippit5.PNG\" />\r\n                    <Card.Body>\r\n                    <Card.Title>Card title</Card.Title>\r\n                    <Card.Text>\r\n                        This card has supporting text below as a natural lead-in to additional\r\n                        content.{' '}\r\n                    </Card.Text>\r\n                    </Card.Body>\r\n                    <Card.Footer>\r\n                    <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n                    </Card.Footer>\r\n                </Card>\r\n                <Card>\r\n                    <Card.Img variant=\"top\" src=\"mower3d_snippit4.PNG\" />\r\n                    <Card.Body>\r\n                    <Card.Title>Card title</Card.Title>\r\n                    <Card.Text>\r\n                        This is a wider card with supporting text below as a natural lead-in to\r\n                        additional content. This card has even longer content than the first to\r\n                        show that equal height action.\r\n                    </Card.Text>\r\n                    </Card.Body>\r\n                    <Card.Footer>\r\n                    <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n                    </Card.Footer>\r\n                </Card>\r\n            </CardGroup>\r\n            <TodoList todos={todos} toggleTodo={toggleTodo}/>\r\n            <div className=\"spacer-large\"></div>\r\n            <input ref={todoNameRef} type=\"text\" />\r\n            <button onClick={handleAddTodo}>Add Todo</button>\r\n            <button onClick={handleClearTodos}>Clear Complete</button>\r\n            <div>{todos.filter(todo => !todo.complete).length} left to do</div>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}